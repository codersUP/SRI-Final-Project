Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expr
Rule 1     expr -> expr AND expr
Rule 2     expr -> expr OR expr
Rule 3     expr -> term
Rule 4     expr -> LPAREN expr RPAREN
Rule 5     expr -> NOT term
Rule 6     expr -> NOT LPAREN expr RPAREN
Rule 7     term -> TERM

Terminals, with rules where they appear

AND                  : 1
LPAREN               : 4 6
NOT                  : 5 6
OR                   : 2
RPAREN               : 4 6
TERM                 : 7
error                : 

Nonterminals, with rules where they appear

expr                 : 1 1 2 2 4 6 0
term                 : 3 5

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . expr AND expr
    (2) expr -> . expr OR expr
    (3) expr -> . term
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . NOT term
    (6) expr -> . NOT LPAREN expr RPAREN
    (7) term -> . TERM

    LPAREN          shift and go to state 3
    NOT             shift and go to state 4
    TERM            shift and go to state 5

    expr                           shift and go to state 1
    term                           shift and go to state 2

state 1

    (0) S' -> expr .
    (1) expr -> expr . AND expr
    (2) expr -> expr . OR expr

    AND             shift and go to state 6
    OR              shift and go to state 7


state 2

    (3) expr -> term .

    AND             reduce using rule 3 (expr -> term .)
    OR              reduce using rule 3 (expr -> term .)
    $end            reduce using rule 3 (expr -> term .)
    RPAREN          reduce using rule 3 (expr -> term .)


state 3

    (4) expr -> LPAREN . expr RPAREN
    (1) expr -> . expr AND expr
    (2) expr -> . expr OR expr
    (3) expr -> . term
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . NOT term
    (6) expr -> . NOT LPAREN expr RPAREN
    (7) term -> . TERM

    LPAREN          shift and go to state 3
    NOT             shift and go to state 4
    TERM            shift and go to state 5

    expr                           shift and go to state 8
    term                           shift and go to state 2

state 4

    (5) expr -> NOT . term
    (6) expr -> NOT . LPAREN expr RPAREN
    (7) term -> . TERM

    LPAREN          shift and go to state 10
    TERM            shift and go to state 5

    term                           shift and go to state 9

state 5

    (7) term -> TERM .

    AND             reduce using rule 7 (term -> TERM .)
    OR              reduce using rule 7 (term -> TERM .)
    $end            reduce using rule 7 (term -> TERM .)
    RPAREN          reduce using rule 7 (term -> TERM .)


state 6

    (1) expr -> expr AND . expr
    (1) expr -> . expr AND expr
    (2) expr -> . expr OR expr
    (3) expr -> . term
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . NOT term
    (6) expr -> . NOT LPAREN expr RPAREN
    (7) term -> . TERM

    LPAREN          shift and go to state 3
    NOT             shift and go to state 4
    TERM            shift and go to state 5

    expr                           shift and go to state 11
    term                           shift and go to state 2

state 7

    (2) expr -> expr OR . expr
    (1) expr -> . expr AND expr
    (2) expr -> . expr OR expr
    (3) expr -> . term
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . NOT term
    (6) expr -> . NOT LPAREN expr RPAREN
    (7) term -> . TERM

    LPAREN          shift and go to state 3
    NOT             shift and go to state 4
    TERM            shift and go to state 5

    expr                           shift and go to state 12
    term                           shift and go to state 2

state 8

    (4) expr -> LPAREN expr . RPAREN
    (1) expr -> expr . AND expr
    (2) expr -> expr . OR expr

    RPAREN          shift and go to state 13
    AND             shift and go to state 6
    OR              shift and go to state 7


state 9

    (5) expr -> NOT term .

    AND             reduce using rule 5 (expr -> NOT term .)
    OR              reduce using rule 5 (expr -> NOT term .)
    $end            reduce using rule 5 (expr -> NOT term .)
    RPAREN          reduce using rule 5 (expr -> NOT term .)


state 10

    (6) expr -> NOT LPAREN . expr RPAREN
    (1) expr -> . expr AND expr
    (2) expr -> . expr OR expr
    (3) expr -> . term
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . NOT term
    (6) expr -> . NOT LPAREN expr RPAREN
    (7) term -> . TERM

    LPAREN          shift and go to state 3
    NOT             shift and go to state 4
    TERM            shift and go to state 5

    expr                           shift and go to state 14
    term                           shift and go to state 2

state 11

    (1) expr -> expr AND expr .
    (1) expr -> expr . AND expr
    (2) expr -> expr . OR expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 1 (expr -> expr AND expr .)
    RPAREN          reduce using rule 1 (expr -> expr AND expr .)
    AND             shift and go to state 6
    OR              shift and go to state 7

  ! AND             [ reduce using rule 1 (expr -> expr AND expr .) ]
  ! OR              [ reduce using rule 1 (expr -> expr AND expr .) ]


state 12

    (2) expr -> expr OR expr .
    (1) expr -> expr . AND expr
    (2) expr -> expr . OR expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 2 (expr -> expr OR expr .)
    RPAREN          reduce using rule 2 (expr -> expr OR expr .)
    AND             shift and go to state 6
    OR              shift and go to state 7

  ! AND             [ reduce using rule 2 (expr -> expr OR expr .) ]
  ! OR              [ reduce using rule 2 (expr -> expr OR expr .) ]


state 13

    (4) expr -> LPAREN expr RPAREN .

    AND             reduce using rule 4 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 4 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 4 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 4 (expr -> LPAREN expr RPAREN .)


state 14

    (6) expr -> NOT LPAREN expr . RPAREN
    (1) expr -> expr . AND expr
    (2) expr -> expr . OR expr

    RPAREN          shift and go to state 15
    AND             shift and go to state 6
    OR              shift and go to state 7


state 15

    (6) expr -> NOT LPAREN expr RPAREN .

    AND             reduce using rule 6 (expr -> NOT LPAREN expr RPAREN .)
    OR              reduce using rule 6 (expr -> NOT LPAREN expr RPAREN .)
    $end            reduce using rule 6 (expr -> NOT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 6 (expr -> NOT LPAREN expr RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 11 resolved as shift
WARNING: shift/reduce conflict for OR in state 11 resolved as shift
WARNING: shift/reduce conflict for AND in state 12 resolved as shift
WARNING: shift/reduce conflict for OR in state 12 resolved as shift
